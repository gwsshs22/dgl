#include <dgl/inference/envs.h>
#include <dgl/inference/common.h>

#include <fstream>
#include <mutex>
#include <cstdio>

namespace dgl {
namespace inference {

const char* DGL_INFER_MASTER_HOST = "DGL_INFER_MASTER_HOST";
const char* DGL_INFER_MASTER_PORT = "DGL_INFER_MASTER_PORT";
const char* DGL_INFER_NODE_RANK = "DGL_INFER_NODE_RANK";
const char* DGL_INFER_LOCAL_RANK = "DGL_INFER_LOCAL_RANK";
const char* DGL_INFER_NUM_NODES = "DGL_INFER_NUM_NODES";
const char* DGL_INFER_NUM_BACKUP_SERVERS = "DGL_INFER_NUM_BACKUP_SERVERS";
const char* DGL_INFER_NUM_DEVICES_PER_NODE = "DGL_INFER_NUM_DEVICES_PER_NODE";
const char* DGL_INFER_NUM_SAMPLERS_PER_NODE = "DGL_INFER_NUM_SAMPLERS_PER_NODE";
const char* DGL_INFER_IFACE = "DGL_INFER_IFACE";
const char* DGL_INFER_ACTOR_PROCESS_ROLE = "DGL_INFER_ACTOR_PROCESS_ROLE";
const char* DGL_INFER_ACTOR_PROCESS_GLOBAL_ID = "DGL_INFER_ACTOR_PROCESS_GLOBAL_ID";

const char* DGL_INFER_PARALLELIZATION_TYPE = "DGL_INFER_PARALLELIZATION_TYPE";
const char* DGL_INFER_USING_PRECOMPUTED_AGGREGATIONS = "DGL_INFER_USING_PRECOMPUTED_AGGREGATIONS";

const char* DGL_INFER_INPUT_TRACE_DIR = "DGL_INFER_INPUT_TRACE_DIR";
const char* DGL_INFER_NUM_WARMUPS = "DGL_INFER_NUM_WARMUPS";
const char* DGL_INFER_NUM_REQUESTS = "DGL_INFER_NUM_REQUESTS";
const char* DGL_INFER_RESULT_DIR = "DGL_INFER_RESULT_DIR";
const char* DGL_INFER_COLLECT_STATS = "DGL_INFER_COLLECT_STATS";
const char* DGL_INFER_EXECUTE_ONE_BY_ONE = "DGL_INFER_EXECUTE_ONE_BY_ONE";

const char* DGL_INFER_EXP_LAMBDA = "DGL_INFER_EXP_LAMBDA";

bool TRACE_ENABLED = false;

void EnableTracing() {
  TRACE_ENABLED = true;
}

}
}
